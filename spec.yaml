openapi: 3.0.0
info:
  title: GO-COURT API spec
  description: ''
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    UserDto:
      type: object
      properties:
        profile_name:
          type: string
        email:
          type: string
        gender:
          type: string
        phone:
          type: string
        password:
          type: string
        description:
          type: string
        register_by:
          type: string
          default: EMAIL
          enum:
            - FACEBOOK
            - EMAIL
        external_id:
          type: string
          description: 用來存第三方登入的 id
        meta:
          type: object
      required:
        - profile_name
        - email
        - gender
        - phone
        - password
        - description
        - register_by
        - external_id
        - meta
    User:
      type: object
      properties:
        user_id:
          type: string
        profile_name:
          type: string
        email:
          type: string
        phone:
          type: string
        gender:
          type: string
        password:
          type: string
        user_status:
          type: string
          enum:
            - INITIAL
            - ENABLED
            - DISABLED
          default: INITIAL
        register_by:
          type: string
          enum:
            - FACEBOOK
            - EMAIL
          default: EMAIL
        user_role:
          type: string
          enum:
            - ADMIN
            - NORMAL_USER
          default: NORMAL_USER
        external_id:
          type: string
          description: 用來存第三方登入的 id
        description:
          type: string
        meta:
          type: object
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - user_id
        - profile_name
        - email
        - phone
        - gender
        - password
        - user_status
        - register_by
        - user_role
        - external_id
        - description
        - meta
        - created_at
        - updated_at
    SendEmailDto:
      type: object
      properties:
        email:
          type: string
      required:
        - email
    VerificationDto:
      type: object
      properties:
        email:
          type: string
        verification_code:
          type: string
      required:
        - email
        - verification_code
    PasswordDto:
      type: object
      properties:
        password:
          type: string
        new_password:
          type: string
      required:
        - password
        - new_password
    ResetPasswordDto:
      type: object
      properties:
        email:
          type: string
        verification_code:
          type: string
        password:
          type: string
      required:
        - email
        - verification_code
        - password
    GetManyResponseForUser:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/User'
        count:
          type: number
        size:
          type: number
          default: 10
        total:
          type: number
        totalPage:
          type: number
      required:
        - content
        - count
        - size
        - total
        - totalPage
    LoginDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    AuthLoginDto:
      type: object
      properties:
        email:
          type: string
        external_id:
          type: string
        profile_name:
          type: string
        accessToken:
          type: string
        register_by:
          type: string
          example: FACEBOOK
          enum:
            - FACEBOOK
            - EMAIL
        meta:
          type: object
      required:
        - email
        - external_id
        - profile_name
        - accessToken
        - register_by
        - meta
    Court:
      type: object
      properties:
        court_id:
          type: number
        name:
          type: string
        address:
          type: string
        city_code:
          type: string
        dist_code:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        phone:
          type: string
        logo_url:
          type: string
        description:
          type: string
        open_status:
          type: string
        geometry:
          type: object
        meta:
          type: object
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - court_id
        - name
        - address
        - city_code
        - dist_code
        - latitude
        - longitude
        - phone
        - logo_url
        - description
        - open_status
        - geometry
        - meta
        - created_at
        - updated_at
    GetManyResponseForCourt:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Court'
        count:
          type: number
        size:
          type: number
          default: 10
        total:
          type: number
        totalPage:
          type: number
      required:
        - content
        - count
        - size
        - total
        - totalPage
    CourtDto:
      type: object
      properties:
        court_id:
          type: number
        name:
          type: string
        address:
          type: string
        city_code:
          type: string
        dist_code:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        phone:
          type: string
        logo_url:
          type: string
        description:
          type: string
        open_status:
          type: string
        meta:
          type: object
      required:
        - court_id
        - name
        - address
        - city_code
        - dist_code
        - latitude
        - longitude
        - phone
        - logo_url
        - description
        - open_status
        - meta
    UpdateGameDto:
      type: object
      properties:
        game_id:
          type: string
        game_name:
          type: string
        court_id:
          type: string
        game_start_at:
          format: date-time
          type: string
        game_end_at:
          format: date-time
          type: string
        sell_start_at:
          format: date-time
          type: string
        sell_end_at:
          format: date-time
          type: string
        total_player_number:
          type: number
        court_type:
          type: string
        game_type:
          type: string
        description:
          type: string
        game_status:
          type: string
        meta:
          type: object
        is_public:
          type: boolean
        deleted:
          type: boolean
    GameStock:
      type: object
      properties:
        game_stock_id:
          type: string
        game_id:
          type: string
        game_detail:
          $ref: '#/components/schemas/UpdateGameDto'
        spec_name:
          type: string
        stock_amount:
          type: number
        price:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - game_stock_id
        - game_id
        - game_detail
        - spec_name
        - stock_amount
        - price
        - created_at
        - updated_at
    Game:
      type: object
      properties:
        game_id:
          type: string
        game_name:
          type: string
        host_user_id:
          type: string
        host_user_detail:
          $ref: '#/components/schemas/User'
        court_id:
          type: string
        court_detail:
          $ref: '#/components/schemas/Court'
        game_stock:
          type: array
          items:
            $ref: '#/components/schemas/GameStock'
        game_start_at:
          format: date-time
          type: string
        game_end_at:
          format: date-time
          type: string
        sell_start_at:
          format: date-time
          type: string
        sell_end_at:
          format: date-time
          type: string
        total_player_number:
          type: number
        court_type:
          type: string
          enum:
            - INDOOR
            - COVERED
            - OUTDOOR
        game_type:
          type: string
          enum:
            - MALE_NET
            - FEMALE_NET_MIX
            - FEMAL_NET_PURE
            - BEACH
        description:
          type: string
        game_status:
          type: string
          enum:
            - PENDING
            - PLAYING
            - FINISHED
        meta:
          type: object
        is_public:
          type: boolean
        deleted:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - game_id
        - game_name
        - host_user_id
        - host_user_detail
        - court_id
        - court_detail
        - game_stock
        - game_start_at
        - game_end_at
        - sell_start_at
        - sell_end_at
        - total_player_number
        - court_type
        - game_type
        - description
        - game_status
        - meta
        - is_public
        - deleted
        - created_at
        - updated_at
    GetManyResponseForGame:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Game'
        count:
          type: number
        size:
          type: number
          default: 10
        total:
          type: number
        totalPage:
          type: number
      required:
        - content
        - count
        - size
        - total
        - totalPage
    CreateGameDto:
      type: object
      properties:
        game_id:
          type: string
        game_name:
          type: string
        court_id:
          type: string
        game_start_at:
          format: date-time
          type: string
        game_end_at:
          format: date-time
          type: string
        sell_start_at:
          format: date-time
          type: string
        sell_end_at:
          format: date-time
          type: string
        total_player_number:
          type: number
        court_type:
          type: string
        game_type:
          type: string
        description:
          type: string
        game_status:
          type: string
        meta:
          type: object
        is_public:
          type: boolean
        deleted:
          type: boolean
      required:
        - game_id
        - game_name
        - court_id
        - game_start_at
        - game_end_at
        - sell_start_at
        - sell_end_at
        - total_player_number
        - court_type
        - game_type
        - description
        - game_status
        - meta
        - is_public
        - deleted
    GameTicket:
      type: object
      properties:
        game_ticket_id:
          type: string
        game_id:
          type: string
        game_detail:
          $ref: '#/components/schemas/UpdateGameDto'
        game_stock_id:
          type: string
        game_stock_detail:
          $ref: '#/components/schemas/GameStock'
        owner_user_id:
          type: string
        owner_user_detail:
          $ref: '#/components/schemas/User'
        game_ticket_status:
          type: string
          enum:
            - PENDING
            - PLAYING
            - VERIFIED
        isPaid:
          type: boolean
        meta:
          type: object
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - game_ticket_id
        - game_id
        - game_detail
        - game_stock_id
        - game_stock_detail
        - owner_user_id
        - owner_user_detail
        - game_ticket_status
        - isPaid
        - meta
        - created_at
        - updated_at
    GameUser:
      type: object
      properties:
        game_ticket_id:
          type: string
        game_ticket_detail:
          $ref: '#/components/schemas/GameTicket'
        game_stock_id:
          type: string
        game_stock_detail:
          $ref: '#/components/schemas/GameStock'
        game_id:
          type: string
        game_user_id:
          type: string
        game_user_detail:
          $ref: '#/components/schemas/User'
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - game_ticket_id
        - game_ticket_detail
        - game_stock_id
        - game_stock_detail
        - game_id
        - game_user_id
        - game_user_detail
        - created_at
        - updated_at
    GetManyResponseForGameUser:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/GameUser'
        count:
          type: number
        size:
          type: number
          default: 10
        total:
          type: number
        totalPage:
          type: number
      required:
        - content
        - count
        - size
        - total
        - totalPage
    GetManyResponseForGameTicket:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/GameTicket'
        count:
          type: number
        size:
          type: number
          default: 10
        total:
          type: number
        totalPage:
          type: number
      required:
        - content
        - count
        - size
        - total
        - totalPage
    TransferTicketDto:
      type: object
      properties:
        receiver_id:
          type: string
    File:
      type: object
      properties:
        file_id:
          type: string
        file_name:
          type: string
        tag:
          type: string
        file_url:
          type: string
        created_by:
          type: string
        reference_id:
          type: string
        is_public:
          type: boolean
        description:
          type: string
        meta:
          type: object
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - file_id
        - file_name
        - tag
        - file_url
        - created_by
        - reference_id
        - is_public
        - description
        - meta
        - created_at
        - updated_at
    GetManyResponseForFile:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/File'
        count:
          type: number
        size:
          type: number
          default: 10
        total:
          type: number
        totalPage:
          type: number
      required:
        - content
        - count
        - size
        - total
        - totalPage
    FileDto:
      type: object
      properties:
        file_id:
          type: string
        file_name:
          type: string
        tag:
          type: string
        file_url:
          type: string
        reference_id:
          type: string
        is_public:
          type: boolean
        description:
          type: string
        meta:
          type: object
      required:
        - file_id
        - file_name
        - tag
        - file_url
        - reference_id
        - is_public
        - description
        - meta
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
  /admin/users:
    post:
      operationId: UserController_adminAddUser
      summary: Admin 建立使用者(省略 email 驗證)
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - users
  '/admin/users/{user_id}':
    put:
      operationId: UserController_adminUpdateUser
      summary: Admin 修改使用者
      parameters:
        - name: user_id
          required: true
          in: path
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - users
    delete:
      operationId: UserController_adminDisableUser
      summary: admin 停用帳號
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - users
  /register:
    post:
      operationId: UserController_register
      summary: 註冊帳號(產生的 user entity 需透過 email 驗證才能啟用)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - users
  /users/verification:
    put:
      operationId: UserController_sendVerification
      summary: 發送啟用帳號驗證信
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailDto'
      responses:
        '200':
          description: ''
      tags:
        - users
  /users/enable:
    put:
      operationId: UserController_enableUser
      summary: 用驗證碼啟用帳號
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationDto'
      responses:
        '200':
          description: ''
      tags:
        - users
  /users/password:
    put:
      operationId: UserController_changePassword
      summary: 變更密碼
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordDto'
      responses:
        '200':
          description: ''
      tags:
        - users
  /forgot/verification:
    put:
      operationId: UserController_forgotPassword
      summary: 發忘記密碼驗證碼
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailDto'
      responses:
        '200':
          description: ''
      tags:
        - users
  /forgot/reset_password:
    put:
      operationId: UserController_resetPassword
      summary: 用驗證碼重設密碼
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordDto'
      responses:
        '200':
          description: ''
      tags:
        - users
  /profile:
    get:
      operationId: UserController_getSelfProfile
      summary: 取得登入帳號 profile
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - users
    put:
      operationId: UserController_updateSelfProfile
      summary: 修改登入帳號 profile
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - users
  /users:
    get:
      operationId: UserController_queryUsers
      summary: 查詢所有使用者
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
        - name: size
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: sort_by
          required: false
          in: query
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForUser'
      tags:
        - users
    delete:
      operationId: UserController_disableSelfUser
      summary: 停用自己的帳號
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - users
  '/users/{user_id}':
    get:
      operationId: UserController_user
      summary: 用 user_id 取回使用者
      parameters:
        - name: user_id
          required: true
          in: path
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - users
  /auth/login:
    post:
      operationId: AuthController_login
      summary: 登入
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: JWT 放在 response header 的 Authorization
      tags:
        - auth
  /auth/social_login:
    post:
      operationId: AuthController_authLogin
      summary: 第三方登入，如果是第一次登入會自動建立 user entity
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginDto'
      responses:
        '200':
          description: JWT 放在 response header 的 Authorization
      tags:
        - auth
  /courts:
    get:
      operationId: CourtController_queryCourts
      summary: 搜尋球場
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
        - name: size
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: sort_by
          required: false
          in: query
          schema:
            type: string
        - name: dist_code
          required: false
          in: query
          example: '63000'
          schema:
            type: string
        - name: city_code
          required: false
          in: query
          example: '63000170'
          schema:
            type: string
        - name: name
          required: false
          in: query
          example: 師大分部
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForCourt'
      tags:
        - courts
    post:
      operationId: CourtController_addCourt
      summary: 建立球場
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourtDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Court'
      tags:
        - courts
  '/courts/{court_id}':
    get:
      operationId: CourtController_getGameById
      summary: 取得球場詳細資訊
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Court'
      tags:
        - courts
    put:
      operationId: CourtController_updateCourtById
      summary: 修改球場
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourtDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Court'
      tags:
        - courts
  /games:
    get:
      operationId: GamesController_queryGames
      summary: 查詢球賽
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
        - name: size
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: sort_by
          required: false
          in: query
          schema:
            type: string
        - name: court_type
          required: false
          in: query
          schema:
            type: string
        - name: game_type
          required: false
          in: query
          schema:
            type: string
        - name: city_code
          required: false
          in: query
          schema:
            type: string
        - name: dist_code
          required: false
          in: query
          schema:
            type: string
        - name: start
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - name: end
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - name: game_name
          required: false
          in: query
          schema:
            type: string
        - name: game_status
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForGame'
      tags:
        - games
    post:
      operationId: GamesController_addGame
      summary: 建立球賽 entity
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGameDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
      tags:
        - games
  /games/host:
    get:
      operationId: GamesController_findGamesOfHost
      summary: 查詢登入者主辦的球賽
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
        - name: size
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: sort_by
          required: false
          in: query
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForGame'
      tags:
        - games
  /games/popular:
    get:
      operationId: GamesController_queryPopularGames
      summary: 查詢熱門球賽
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
        - name: size
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: sort_by
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForGame'
      tags:
        - games
  '/games/{game_id}':
    get:
      operationId: GamesController_getGameById
      summary: 取得球賽詳細資訊
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
      tags:
        - games
    put:
      operationId: GamesController_updateGame
      summary: 修改球賽 entity
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGameDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
      tags:
        - games
  '/games/{game_id}/stock':
    put:
      operationId: GamesController_updateGameStock
      summary: 修改球賽票券規格
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                default:
                  spec_name: 男生
                  stock_amount: 12
                  price: 150
      responses:
        '200':
          description: ''
      tags:
        - games
  '/games/{game_id}/game_users':
    get:
      operationId: GamesController_queryGameUsers
      summary: 查詢該球賽參賽者
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
        - name: size
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: sort_by
          required: false
          in: query
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForGameUser'
      tags:
        - games
  '/games/{game_id}/init':
    put:
      operationId: GamesController_initGame
      summary: 球賽建立者啟用球賽(開放進場)
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - games
  '/games/{game_id}/initGameUsers':
    put:
      operationId: GamesController_initGameUser
      summary: 自動把購票者轉成 game user
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - games
  '/games/{game_id}/close':
    put:
      operationId: GamesController_closeGame
      summary: 關閉球賽
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - games
  /games/admin/clean:
    put:
      operationId: GamesController_cleanGames
      summary: 關閉所有已超過結束時間的球賽(有排程定時執行)
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - games
  /tickets:
    get:
      operationId: TicketsController_getMyTickets
      summary: 查詢登入帳號有的票券
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
        - name: size
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: sort_by
          required: false
          in: query
          schema:
            type: string
        - name: game_ticket_status
          required: false
          in: query
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForGameTicket'
      tags:
        - tickets
  '/tickets/{game_ticket_id}':
    get:
      operationId: TicketsController_getTicketById
      summary: 取得票券詳細資訊
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameTicket'
      tags:
        - tickets
  /tickets/checkout:
    post:
      operationId: TicketsController_checkout
      summary: 購買票券
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                example:
                  stock_amount: 1
                  game_stock_id: 7e72e5e5-17be-4efd-92dd-db6481ebe400
      responses:
        '200':
          description: ''
      tags:
        - tickets
  '/tickets/games/{game_id}/tickets':
    get:
      operationId: TicketsController_queryGameTickets
      summary: 查詢該比賽的票券
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
        - name: size
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: sort_by
          required: false
          in: query
          schema:
            type: string
        - name: game_ticket_status
          required: false
          in: query
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForGameTicket'
      tags:
        - tickets
  '/tickets/{game_ticket_id}/transfer':
    put:
      operationId: TicketsController_transferTicket
      summary: 轉票給其他 user
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferTicketDto'
      responses:
        '200':
          description: ''
      tags:
        - tickets
  '/tickets/games/{game_id}/tickets/{game_ticket_id}/verify':
    put:
      operationId: TicketsController_verifyTicket
      summary: 球賽主辦者驗證參賽者票券(被驗證者會被加入該球賽 game user)
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - tickets
  /files:
    get:
      operationId: FilesController_queryGames
      summary: 搜尋 file entity
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
        - name: size
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: sort_by
          required: false
          in: query
          schema:
            type: string
        - name: tag
          required: false
          in: query
          schema:
            type: string
        - name: reference_id
          required: false
          in: query
          schema:
            type: string
        - name: created_by
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForFile'
      tags:
        - files
    post:
      operationId: FilesController_addFile
      summary: 建立 file entity
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      tags:
        - files
  '/files/{file_id}':
    get:
      operationId: FilesController_getGameById
      summary: 搜尋 file entity by id
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      tags:
        - files
    put:
      operationId: FilesController_updateFile
      summary: 修改 file entity
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      tags:
        - files
    delete:
      operationId: FilesController_deleteFile
      summary: 刪除 file
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - files
  '/files/{file_id}/content':
    put:
      operationId: FilesController_updateFileContent
      summary: 上傳 file content
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      requestBody:
        required: true
        description: 'use form-data, key "file"'
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: ''
      tags:
        - files
    get:
      operationId: FilesController_getFileContent
      summary: 下載 file content
      parameters:
        - name: Authorization
          in: header
          description: JWT
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - files
